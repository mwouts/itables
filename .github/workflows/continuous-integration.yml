name: CI
on:
  push:
    paths-ignore:
      - 'CHANGELOG.md'
  pull_request:
  schedule:
    - cron: '0 11 * * 4'

jobs:
  skip_duplicate:
    runs-on: ubuntu-20.04
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        with:
          github_token: ${{ github.token }}

  pre-commit:
    needs: skip_duplicate
    if: ${{ needs.skip_duplicate.outputs.should_skip == 'false' }}
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - uses: pre-commit/action@v2.0.0

  test-pip:
    needs: skip_duplicate
    if: ${{ needs.skip_duplicate.outputs.should_skip == 'false' }}
    strategy:
      matrix:
        python-version: [ 2.7, 3.6, 3.7, 3.8, 3.9, "3.10", "3.11"]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          if("${{ matrix.python-version }}" -eq "2.7")
          then
            pip install pandas==0.22
          fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # all Python files should follow PEP8
          flake8 itables tests
          # exit-zero treats all errors as warnings.  The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --statistics
      - name: Install a development version of 'itables'
        run: pip install -e .
      - name: Install a Jupyter Kernel
        run: python -m ipykernel install --name itables --user
      - name: Test with pytest
        run: pytest --cov=./ --cov-report=xml
      - name: Upload coverage
        uses: codecov/codecov-action@v1

  test-pip-polars:
    needs: skip_duplicate
    if: ${{ needs.skip_duplicate.outputs.should_skip == 'false' }}
    strategy:
      matrix:
        python-version: [ 3.7, 3.8, 3.9, "3.10", "3.11"]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
      - name: Install a development version of 'itables'
        run: pip install -e .[polars]
      - name: Install a Jupyter Kernel
        run: python -m ipykernel install --name itables --user
      - name: Test with pytest
        run: pytest --cov=./ --cov-report=xml
      - name: Upload coverage
        uses: codecov/codecov-action@v1

  publish:
    name: Publish to PyPi
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Build package
        run: |
          pip install wheel requests
          python setup.py sdist bdist_wheel
      - name: Publish
        uses: pypa/gh-action-pypi-publish@v1.1.0
        with:
          user: __token__
          password: ${{ secrets.PYPI_KEY }}
