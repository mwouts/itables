[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "itables"
authors = [{name = "Marc Wouts", email = "marc.wouts@gmail.com"}]
maintainers = [{name = "Marc Wouts", email = "marc.wouts@gmail.com"}]
description = "Pandas and Polar DataFrames as interactive DataTables"
readme = "README.md"
license = { file = "LICENSE" }
keywords = ["Pandas", "Polars", "Interactive", "Javascript", "DataTables"]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "License :: OSI Approved :: MIT License",
  "Framework :: Jupyter",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]
requires-python = ">= 3.7"
dependencies = ["IPython", "pandas", "numpy"]
dynamic = ["version"]

[project.optional-dependencies]
polars = ["polars", "pyarrow"]
style = ["matplotlib"]
samples = ["pytz", "world_bank_data"]
all = ["itables[polars,style,samples]"]
test = [
  "itables[all]",
  # Pytest
  "pytest",
  "pytest-cov",
  # Test the documentation
  "ipykernel",
  "nbconvert",
  "jupytext",
  # Shiny test app
  "shiny",
  # Test urls
  "requests",
]

[tool.hatch.version]
path = "src/itables/version.py"

[project.urls]
Homepage = "https://mwouts.github.io/itables/"
Documentation = "https://mwouts.github.io/itables"
Repository = "https://github.com/mwouts/itables.git"
Issues = "https://github.com/mwouts/itables/issues"
Changelog = "https://github.com/mwouts/itables/blob/main/docs/changelog.md"

[pycodestyle]
max-line-length = 88

[tool.coverage.report]
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",

    # Don't complain if tests don't hit defensive assertion code:
    "raise NotImplementedError",
    "except ImportError",
  ]

[tool.hatch.build.hooks.jupyter-builder]
enable-by-default = true
dependencies = ["hatch-jupyter-builder"]
build-function = "hatch_jupyter_builder.npm_builder"
ensured-targets = [
    "src/itables/html/dt_bundle.js",
    "src/itables/html/dt_bundle.css",
    "src/itables/itables_for_streamlit/asset-manifest.json"
    ]

[tool.hatch.build.hooks.jupyter-builder.build-kwargs]
path = "packages"
build_cmd = "build"
npm = ["npm"]

[tool.hatch.build.targets.sdist]
artifacts = ["src/itables/html/dt_bundle.js", "src/itables/html/dt_bundle.css", "src/itables/itables_for_streamlit/*"]

[tool.hatch.build.targets.wheel]
artifacts = ["src/itables/html/dt_bundle.js", "src/itables/html/dt_bundle.css", "src/itables/itables_for_streamlit/*"]
